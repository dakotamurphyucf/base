// Generated by Melange
'use strict';

var ListLabels = require("bs-platform/lib/js/listLabels.js");

function exists(t, f) {
  return ListLabels.exists(f, t);
}

function exists2_ok(l1, l2, f) {
  return ListLabels.exists2(f, l1, l2);
}

function fold(t, init, f) {
  return ListLabels.fold_left(f, init, t);
}

function fold2_ok(l1, l2, init, f) {
  return ListLabels.fold_left2(f, init, l1, l2);
}

function for_all(t, f) {
  return ListLabels.for_all(f, t);
}

function for_all2_ok(l1, l2, f) {
  return ListLabels.for_all2(f, l1, l2);
}

function iter(t, f) {
  return ListLabels.iter(f, t);
}

function iter2_ok(l1, l2, f) {
  return ListLabels.iter2(f, l1, l2);
}

function nontail_map(t, f) {
  return ListLabels.map(f, t);
}

function nontail_mapi(t, f) {
  return ListLabels.mapi(f, t);
}

function partition(t, f) {
  return ListLabels.partition(f, t);
}

function rev_map(t, f) {
  return ListLabels.rev_map(f, t);
}

function rev_map2_ok(l1, l2, f) {
  return ListLabels.rev_map2(f, l1, l2);
}

function sort(l, compare) {
  return ListLabels.sort(compare, l);
}

function stable_sort(l, compare) {
  return ListLabels.stable_sort(compare, l);
}

function rev(res) {
  if (!res) {
    return res;
  }
  var match = res.tl;
  if (match) {
    return ListLabels.rev_append(match.tl, {
                hd: match.hd,
                tl: {
                  hd: res.hd,
                  tl: /* [] */0
                }
              });
  } else {
    return res;
  }
}

var hd_exn = ListLabels.hd;

var length = ListLabels.length;

var rev_append = ListLabels.rev_append;

var tl_exn = ListLabels.tl;

var unzip = ListLabels.split;

exports.hd_exn = hd_exn;
exports.length = length;
exports.rev_append = rev_append;
exports.tl_exn = tl_exn;
exports.unzip = unzip;
exports.exists = exists;
exports.exists2_ok = exists2_ok;
exports.fold = fold;
exports.fold2_ok = fold2_ok;
exports.for_all = for_all;
exports.for_all2_ok = for_all2_ok;
exports.iter = iter;
exports.iter2_ok = iter2_ok;
exports.nontail_map = nontail_map;
exports.nontail_mapi = nontail_mapi;
exports.partition = partition;
exports.rev_map = rev_map;
exports.rev_map2_ok = rev_map2_ok;
exports.sort = sort;
exports.stable_sort = stable_sort;
exports.rev = rev;
/* No side effect */
