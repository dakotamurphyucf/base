// Generated by Melange
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Import$negBase = require("./import.bs.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

function $$const(c, param) {
  return c;
}

function non(f, x) {
  return !Curry._1(f, x);
}

function forever(f) {
  try {
    var _param;
    while(true) {
      Curry._1(f, undefined);
      _param = undefined;
      continue ;
    };
  }
  catch (raw_e){
    return Caml_js_exceptions.internalToOCamlException(raw_e);
  }
}

function compose(f, g, x) {
  return Curry._1(f, Curry._1(g, x));
}

function flip(f, x, y) {
  return Curry._2(f, y, x);
}

function apply_n_times(_n, f, _x) {
  while(true) {
    var x = _x;
    var n = _n;
    if (Import$negBase.$less$eq(n, 0)) {
      return x;
    }
    _x = Curry._1(f, x);
    _n = Import$negBase.$neg(n, 1);
    continue ;
  };
}

exports.$$const = $$const;
exports.non = non;
exports.forever = forever;
exports.apply_n_times = apply_n_times;
exports.compose = compose;
exports.flip = flip;
/* Import-Base Not a pure module */
