// Generated by Melange
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Array0$negBase = require("./array0.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Import$negBase = require("./import.bs.js");
var Random$negBase = require("./random.bs.js");
var Ordered_collection_common0$negBase = require("./ordered_collection_common0.bs.js");

function permute(random_stateOpt, posOpt, len, t) {
  var random_state = random_stateOpt !== undefined ? Caml_option.valFromOption(random_stateOpt) : Random$negBase.State.$$default;
  var pos = posOpt !== undefined ? posOpt : 0;
  var total_length = t.length;
  var len$1 = len !== undefined ? len : Import$negBase.$neg(total_length, pos);
  Ordered_collection_common0$negBase.check_pos_len_exn(pos, len$1, total_length);
  var num_swaps = Import$negBase.$neg(len$1, 1);
  for(var i = num_swaps; i >= 1; --i){
    var this_i = Import$negBase.$plus(pos, i);
    var random_i = Import$negBase.$plus(pos, Curry._2(Random$negBase.State.$$int, random_state, Import$negBase.$plus(i, 1)));
    Array0$negBase.swap(t, this_i, random_i);
  }
  
}

var invalid_argf = Array0$negBase.invalid_argf;

var Array_int = Array0$negBase.Array_int;

var max_length = Array0$negBase.max_length;

var create = Array0$negBase.create;

var append = Array0$negBase.append;

var blit = Array0$negBase.blit;

var concat = Array0$negBase.concat;

var copy = Array0$negBase.copy;

var fill = Array0$negBase.fill;

var init = Array0$negBase.init;

var make_matrix = Array0$negBase.make_matrix;

var of_list = Array0$negBase.of_list;

var sub = Array0$negBase.sub;

var to_list = Array0$negBase.to_list;

var fold = Array0$negBase.fold;

var fold_right = Array0$negBase.fold_right;

var iter = Array0$negBase.iter;

var iteri = Array0$negBase.iteri;

var map = Array0$negBase.map;

var mapi = Array0$negBase.mapi;

var stable_sort = Array0$negBase.stable_sort;

var swap = Array0$negBase.swap;

exports.invalid_argf = invalid_argf;
exports.Array_int = Array_int;
exports.max_length = max_length;
exports.create = create;
exports.append = append;
exports.blit = blit;
exports.concat = concat;
exports.copy = copy;
exports.fill = fill;
exports.init = init;
exports.make_matrix = make_matrix;
exports.of_list = of_list;
exports.sub = sub;
exports.to_list = to_list;
exports.fold = fold;
exports.fold_right = fold_right;
exports.iter = iter;
exports.iteri = iteri;
exports.map = map;
exports.mapi = mapi;
exports.stable_sort = stable_sort;
exports.swap = swap;
exports.permute = permute;
/* Array0-Base Not a pure module */
